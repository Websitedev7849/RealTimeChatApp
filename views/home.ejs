<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Bootstrap CSS -->
    <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"> -->
    <link href="/css/bootstrap/bootstrap.min.css" rel="stylesheet" >


    <link rel="stylesheet" href="/css/home.css">

    <title>Home</title>
</head>
<body class="bg-dark">

  <div class="d-block main">
    <div class="container">
      <div class="d-flex mt-5 flex-column align-items-center">
        <p class="fs-2 text-white"><%= username %></p>

        <div class="p-5 form_background">
          <form class="form">
            <div class="mb-3">
              <label for="username" class="form-label text-white">Username</label>
              <input type="text" class="form-control text-white bg-dark" id="username">
              <div id="emailHelp" class="form-text text-white">Enter username to check if user is online</div>
            </div>
            
            <div class="d-flex justify-content-center mt-4">
              <button type="submit" class="btn btn-primary ps-5 pe-5">Search</button>
            </div>
          </form>

          <div class="alert mt-5 alert-primary d-none" role="alert">
            <p class="fs-6 text-center" style="color: black; height: 0.5rem">  </p>
            <button type="button" class="connect-btn btn btn-success mt-3 d-none" style="margin-left: 3.6rem;">Connect Now</button>
          </div>
        </div>
        

      </div>
    </div>
  </div>
  
  <div class="requests-window">
    <div class="requests-window-header d-flex align-items-center justify-content-around container-fluid w-100 bg-dark">
      
      <p class="text-white fs-6 mt-3">Chat Requests</p>

      <div class="close-request-win-btn d-sm-none">
        <svg fill="#fff" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="22px" height="22px">
          <path d="M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 
          19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 
          20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z"/>
        </svg>
      </div>
    </div>

    <div class="request-window-body p-3">
     
    </div>
    
  </div>

  <div class="requests-window-btn d-sm-none position-fixed top-0 end-0 mt-3 me-3">
    <p class="d-none text-white position-absolute end-0 bg-danger rounded-circle ps-2 pe-2 fw-light">1</p>
    <svg fill="#fff" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="35px" height="35px">
      <path d="M 2 5 L 2 7 L 22 7 L 22 5 L 2 5 z M 2 11 L 2 13 L 22 13 L 22 11 L 2 11 z M 2 17 L 2 19 L 22 19 L 22 17 L 2 17 z"/>
    </svg>
  </div>
</body>

  <!-- Option 1: Bootstrap Bundle with Popper -->
  <!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script> -->
  <script src="/js/bootstrap/bootstrap.bundle.min.js" ></script>


  <script src="/socket.io/socket.io.js"></script>
  <script>
    const JWTToken = getCookie("jwt");
    const socket = io("/home", {query: `jwt_token=${JWTToken}`});
    const username = "<%= username %>"
    const userID = "<%= userID %>"

    socket.emit("user-connected", username, userID);
    socket.on("new_msg", function (data) {
      console.log(data);
    })
    
    // join the room when server another user accepts the chat request
    socket.on("req_accepted", function (data) {
    console.log("request accepted");
      location.href = `/chat/${data.chatRoomID}?reqSenderUsername=${data.reqSenderUsername}`
    })

    

    const form = document.querySelector(".form");
    const alert = document.querySelector(".alert");
    const connectBtn = document.querySelector(".connect-btn");
    const input = document.querySelector("#username");
    const requestsWindowBody = document.querySelector(".request-window-body");
    const numberOfRequestElm = document.querySelector(".requests-window-btn p");

    let numberOfRequests = 0;

    socket.on("conn_req", (data)=>{
      
      if (numberOfRequestElm.classList.contains("d-none")) {
        numberOfRequestElm.classList.remove("d-none");  
      }

      numberOfRequestElm.innerText = `${++numberOfRequests}`;

      requestsWindowBody.innerHTML += generateTag(data.username, data.reqSenderSocketID)
    })

    

    input.addEventListener("focus", e=>{
      // RESET ALERT
      alert.classList.add("d-none");
      connectBtn.classList.add("d-none")
      alert.classList.remove("alert-warning")
    })

    form.addEventListener("submit", async e=>{
      e.preventDefault()

      const username = e.target.username.value

      try {
        const response = await fetch("/isUserActive", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({username})
        })

        // if not logged in
        if (response.redirected === true){
          window.location.assign("/")
        } //else ...


        const body = await response.json()
        alert.classList.remove("d-none")

        if (response.status === 200) {
          alert.children[0].innerText = `User ${body.username} is online`
          connectBtn.classList.remove("d-none")

          connectBtn.addEventListener("click", e=>{
            socket.emit("connect-to-user", body.socketID)
          })
        }
        else {
          alert.children[0].innerText = `User ${body.username} is offline`
          alert.classList.add("alert-warning")
          // connectBtn.removeEventListener("click")
        }
        
      } catch (error) {
        console.log(error);
        alert.children[0].innerText = "something went wrong"
        alert.classList.add("alert-warning")
        // connectBtn.removeEventListener("click")
      }
    

    })


  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  }

  function generateTag(username, reqSenderSocketID) {
    return `
      <div class="user-req-msg p-2 mt-3 border">
        <p class="text-white m-0"><span class="text-success">${username}</span> wants to connect.</p>
        <button class="accept-btn btn btn-link m-0" reqSenderSocketID="${reqSenderSocketID}" onclick="handleAccept('${reqSenderSocketID}', '${username}')">accept</button>
      </div>
    `
  }

  // generate a room id and send to reqSenderSocketID to join
  function handleAccept(reqSenderSocketID, reqSenderUsername) {
    const chatRoomID = generateRandomRoomID(20)
    socket.emit("accept-req", reqSenderSocketID, username, chatRoomID)
    
    location.href = `/chat/${chatRoomID}?reqSenderUsername=${reqSenderUsername}`
  }

  function generateRandomRoomID(length) {
    let result           = '';
    let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let charactersLength = characters.length;
    for ( var i = 0; i < length; i++ ) {
      result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
   return result;
  }
  </script>
  <script>
    const requestsWindowBtn = document.querySelector(".requests-window-btn")
    const requestsWindow = document.querySelector(".requests-window")
    const closeRequstWinBtn = document.querySelector(".close-request-win-btn")

    requestsWindowBtn.addEventListener("click", e=>{
      requestsWindow.style.right = "0vw"
    })

    closeRequstWinBtn.addEventListener("click", e=>{
      requestsWindow.style.right = "-70vw"
    })
  </script>
</html>